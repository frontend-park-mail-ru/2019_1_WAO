// первым делом создадим объект плеера
var pl = game.newImageObject({
	x : 0, y : 0, // начальная позиция, но по сути не требуется
	w : 744 * del, h : 670 * del, // размеры. У меня картинка размером 744 на 670, потом я ее сильно уменьшу
	file : '/static/img/pl.png' // путь к картинке
});

var dy = 2 * del; // сила, движущая объект вниз или вверх
var dmax = 50 * del; // максимальное ускорение
var dx = 0; // вила, движущая объект влево или вправо

// определим ту самую функцию отрисовки персонажа
var drawPlayer = function () {

        // тут подсчитываем счет. Помним, что вверх ось Y уменьшается!
	if (pl.y < score) {
		score = Math.ceil(pl.y);
	}

	pl.draw(); // рисуем персонажа
	pl.move(point(0, dy*dt)); // двигаем его вниз или верх с учетомdelta-time
	dy += dy < dmax ? del*dt : 0; // ускоряем, если максимум скорости вниз еще не достигнут (гравитация)

        // если игрок нажимает на тач (экран)
	if (touch.isDown()) {
		if (touch.getPositionS().x > width/2) // нажатие по правой области экрана (больше половины ширины экрана)
			dx = 30*del; // установим скорость движения положительным числом (вправо двигаться)
		else // иначе
			dx = -30*del; // иначе устанавливаем скорость отрицательным числом (влево)

                // теперь проверим, в какую сторону у нас двигается объект
		if (dx > 0) { // если вправо
			pl.setFlip(0, 0); // сбрасываем зеркалирование (ведь по умолчанию картинка "смотрит" вправо)
			if (pl.x > width) { // если он вышел за пределы экрана
				pl.x = -pl.w; // телепортируем его на другую сторону
			}
		}
		else if (dx < 0) { // если двигается влево
			pl.setFlip(1, 0); // зеркалим картинку
			if (pl.x+pl.w < 0) { // опять же, если вышел за пределы экрана, телепортируем на другую сторону
				pl.x = width; // вот тут
			}
		}


		pl.move(point(dx*dt, 0)); // двигаем влево или вправо уже по факту сам объект
	}

         // помним, что наш счет уменьшается по мере того, как объект поднимается вверх, и если 
         // объект вдруг спустился ниже, чем его максимальная позиция на определенный уровень, то считаем, что он упал
         // а это значит, что игрок проиграл
	if (pl.getPositionS().y > score + 5000 * del) {
		levelScore = score; // устанавливаем счет уровня (помни же, что в меню это выводится?)
		if (score < oldScore) { // но если текущий счет больше, чем предыдущий
			oldScore = score; // устанавливаем новый рекорд
			localStorage.setItem('score', score); // и сразу его сохраняем
		}
		return game.setLoop('menu'); // ну и так как человек проиграл, выкидываем его в меню
	}

       // при отрисовке персонажа, нам желательно так же следить за ним камерой, ведт постоянно поднимается выше и выше.
	camera.moveTimeC(vector.pointPlus(point(width/2, pl.getPositionC().y), point(0, -500*del)), 10);
};